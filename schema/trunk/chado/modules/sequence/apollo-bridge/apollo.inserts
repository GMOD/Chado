--creates several items that Apollo expects to be in the database:
-- a property type cv and terms
-- a pub type cv and terms
-- a pubrelationship type cv and terms
-- a pubprop type cv and terms

--Rice    EST_match 
--Rice    cDNA_match
--Maize   EST_match
--Maize   cross_genome_match
--Rice    protein_match
--FgenesH:Monocot

insert into analysis (name,program,programversion,sourcename)
   values ('Rice_EST_match','blat','1','Rice_EST');
insert into analysis (name,program,programversion,sourcename)
   values ('Rice_cDNA_match','blat','1','Rice_cDNA');
insert into analysis (name,program,programversion,sourcename)
   values ('Maize_EST_match','blat','1','Maize_EST');
insert into analysis (name,program,programversion,sourcename)
   values ('Rice_protein_match','blat','1','Rice_protein');
insert into analysis (name,program,programversion,sourcename)
   values ('Maize_cross_genome_match','blat','1','Maize_genome');
insert into analysis (name,program,programversion,sourcename)
   values ('FgenesH_Monocot','FgenesH','1','na');
insert into analysis (name,program,programversion,sourcename)
   values ('Sorghum_EST_match','blat','1','Sourghum_EST');
insert into analysis (name,program,programversion,sourcename)
   values ('Barley_EST_match','blat','1','Barley_EST');
insert into analysis (name,program,programversion,sourcename)
   values ('Wheat_EST_match','blat','1','Wheat_EST');
insert into analysis (name,program,programversion,sourcename)
   values ('Rice_cross_genome_match','blat','1','Rice_genome');
insert into analysis (name,program,programversion,sourcename)
   values ('Millet_EST_match','blat','1','Millet_EST');


insert into db (name) values ('DB:TIGR_Maize');
insert into db (name) values ('DB:TIGR_Osa');

insert into pub (uniquename, title, type_id) values ('none', 'none', (select cvterm_id from cvterm where name = 'null pub' and cv_id in (select cv_id from cv where name='pub type') ) );

--for the new triggers

create sequence uniquename_id_generator;

insert into cvtermprop (cvterm_id,type_id,value) values ((select cvterm_id from cvterm where name='prefix' and cv_id in (select cv_id from cv where name='apollo')),(select cvterm_id from cvterm where name='is_a' and cv_id in (select cv_id from cv where name='Relationship Ontology')),'RICE');
insert into cvtermprop (cvterm_id,type_id,value) values ((select cvterm_id from cvterm where name='suffix' and cv_id in (select cv_id from cv where name='apollo')),(select cvterm_id from cvterm where name='is_a' and cv_id in (select cv_id from cv where name='Relationship Ontology')),'');

insert into dbxref (db_id, accession) values ((select db_id from db where name='null'),'Relationship Ontology:producedby');
insert into cvterm (name, cv_id, dbxref_id, is_relationshiptype) values ('producedby',(select cv_id from cv where name='Relationship Ontology'),(select dbxref_id from dbxref where accession = 'Relationship Ontology:producedby'),1);

CREATE TABLE feature_namegenerator (
  feature_namegenerator_id serial not null,
  primary key (feature_namegenerator_id),
  name varchar(255),
  type_id int,
  foreign key (type_id)  references cvterm (cvterm_id) on delete cascade INITIALLY DEFERRED,
  count int
--  constraint feature_namegenerator_c1 unique (name,type_id)
);

INSERT INTO feature_namegenerator (name,type_id,count)
SELECT substr(name, 0 , (position('-' in name))),
      (select cvterm_id from cvterm where cv_id=7 and name='transcript'),
       to_number(max(substring(name from 21)), '99999')
FROM feature WHERE name like 'RICE%-transcript%' group by name;

INSERT INTO feature_namegenerator (name,type_id,count)
SELECT substr(name, 0 , (position('-' in name))),
      (select cvterm_id from cvterm where cv_id=14 and name='protein'),
       to_number(max(substring(name from 19)), '99999')
FROM feature WHERE name like 'RICE%-protein%' group by name;

delete from  feature_namegenerator where feature_namegenerator_id not in
(select feature_namegenerator_id from feature_namegenerator where count = max(count) group by name,type_id);

alter table feature_namegenerator add constraint feature_namegenerator_c1 unique (name,type_id);
