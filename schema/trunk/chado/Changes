Version 1.23 Thu Dec  1 14:45:22 EST 2011
* Added $VERSION to Bio::GMOD::DB::Config so that when installing 
Bio::DB::Das::Chado it would be happy.
* Changed all perl script #! lines to use /usr/bin/env perl instead of the
mishmash that was being used in various scripts.

Version 1.22 Thu Nov 17 12:48:10 EST 2011
* Created a script to automatically create the schemas dirs for a release and
add them to the manifest.

Version 1.21 Thu Oct 20 10:52:55 EDT 2011
* Added rudimentary support for non-public schemas in Postgres, though it's
only good for Tripal at the moment.
* Fixed database initialization step "make prepdb" so that the version of the
schema gets set in the chadoprop table.
* Fixed bug in gmod_chado_properties.pl that caused it to crash when updating
the schema version.

Version 1.2 Tue Aug 10 13:59:05 EDT 2010
* Added some error checking to gmod_fasta2gff3.pl (Rob)
* Updated Bio::Chado::Builder to detect recent versions of go-perl.  They
no longer have .pl at the end of the go2fmt script name (Rob)
* The GFF3 bulk loader will now ignore ##sequence-region directives;
previously, their presence caused the loader to fail (Scott)
* added a check for the nodes file downloaded from NCBI. There have been
cases of missing nodes/parents. Code dies if parent is missing. User
must check the nodes file. This needs further investigation with NCBI
taxonomy. (Naama)
* Fix the code in the gff-bridge in the sequence module so that GFF dumping
from GBrowse will work correctly (Scott)
* Added a cvprop table to capture things like obo file version from
a loaded cv. (Scott)
* Removed the "DB:" prefix from all of the names of databases that go
into the db table. (Scott)
* Removed the dependency on Log::Log4perl (it was overkill for what it
was being used for) (Scott)
* Bumped the version to 1.2 because of the new schema module. (Scott)
* Added gmod_chado_properties.pl to examine the chadoprop table and return
values on the command line (like the schema version) (Scott)
* Added gmod_update_chado.pl to update the schema automatically, and added
a make target (make update) to make updating easier. (Scott)
* Removed cell_type ontology from 'make ontologies' list as it wasn't loading
via stag_storenode.pl at release time (Scott)

Version 1.11 Tue May 25 11:10:47 EDT 2010
* fixed an issue with accessing the primary_id of
Bio::Annotation::DBLink objects (Naama)
* Fixes issue with dependencies on CXGN-specific code. Now all
db connection parameters for cxgn - contributed scripts should be passed
in a gmod_config file, or in command line options as listed in the POD.
* Made gmod_materialized_view_tool.pl able to accept all configuration
parameters on the command line (this is to make it work with automatic
MV creation for full text searching) (Scott).
* fixed messed up gmod_load_cvterms.pl -p and -u options (Naama)

Version 1.1

* Fixes to gmod_gff3_preprocessor.pl so that file splitting will work
as expected.
* Minor fix to Bio::GMOD::DB::Adaptor (used by gmod_bulk_load_gff3.pl)
to silence a uninint warning.
* Created a plpgsql function to share exons (called share_exons) that
takes exon features that have the same boundaries as another exon and reduces
them to one feature and fixes up feature_relationship entries so that
the remaining exon belongs to the right transcript/genes.  This may
be needed for Apollo.  Thanks to Robin Houston at GeneDB/Sanger Centre
for contributing much of the code.
* Created a function to order exons (called order_exons) that will create
entries in the feature_relationship.rank column to number exons (0 based) 
from beginning to end in a given transcript.  This was originally needed
for Apollo, but by the time this function was done, Ed Lee had fixed up
Apollo to not need it.
* Fixed the audit module so that the triggers in it work with versions
of PostgreSQL greater that 8.0.
* Added so-bridge views.  These are a set of views on the feature table
the use SO terms for the names of the views, making it easy to query for
genes by doing something like this:  SELECT * FROM so.gene WHERE name='foo'.
See http://gmod.org/Chado_SO_Views for more information.
* Added a protein_code_gene view (depends on so-bridge); thanks to Chris
Mungall.
* Updated all_feature_names view to search featureprop.value and
dbxref.accession and added organism_id so GBrowse can limit
by organism.
* Fixed gmod_bulk_load_gff3.pl to deal correctly with the case that
mulitple organisms have the same common name.  If the user tries to
use a common name that corresponds to more than one organism, it will
die gracefully.
* Fixed gmod_bulk_load_gff3.pl so that featureloc.srcfeature_id will
not be sometimes set incorrectly when there are multiple organisms
with chromosomes (or other srcfeatures) with the same name. 
* Added a __DIE__ signal handler to gmod_bulk_load_gff3.pl so that the
databsae will be cleaned up in most cases before the loader croaks.
* Fixed gmod_bulk_load_gff3.pl so that when loading dna sequence from the
fasta section it won't accidentally add sequence to a feature that has
the same uniquename but different organism_id to the actual target.
* Adding a update_sequences method for use by gmod_bulk_load_gff3.pl
that will check the next value available to the database sequences
that generate primary keys and update them when necessary.  This
can happen when another database load adds data to chado but does
not update the sequence.
* Adding the ability to specify that gmod_bulk_load_gff3.pl use the
system tmp directory rather than using the current working directory
for writing the temporary load files.
* Added a --fastafile option to gmod_bulk_load_gff3.pl to use when 
loading fasta files.
* Removed the cause of the error messages at the end of ontology loading:
it was a patch to correct for bad behavior that DBIx::DBStag which was
fixed some time ago.
* Added gmod_bulk_pub_loader.pl contributed by SGN.
* Added gmod_make_cvtermpath.pl contributed by SGN.

Below this line are changes up until a few years ago and are included
for historical purposes.
---------------------------------------------------------------------------


VERSION 0.01
============

No change log

VERSION 0.02
============

No change log

VERSION 0.03
============

all modules
	ditched timeentered and timelastmod columns in every table
		We've decided that auditing is implementation specific.
		We're presently working on the FB implementation, and
		  will make that available soon
	changed all dbxrefstr foreign keys to dbxref_id
	added indexes for every foreign key column in every table
	all linking tables:
		Added primary keys to all linking tables, for consistency's 
		sake, since we already had primary keys in some linking tables.
		I hope nobody objects...?

general module:

	dbxref
		removed dbxref.dbxrefstr
		removed unique key (dbxrefstr)

cv module:

	New table:
		added table cv to hold cv names
	cvterm
		changed accordingly
	cvpath
		changed accordingly	

	cvterm_synonym
		changed the name of table cvterm_synonym to cvtermsynonym, 
		since this isn't a linking table.


organism module:

	organism_dbxref
		added unique key (organism_id,dbxref_id)
	organism
		made genus, species, taxgroup fields not null

pub module

	pub
		added miniref
		added unique key (miniref)
	pub_author
		added unique key (author_id,pub_id)
	author
		added unique key (surname,givenname,suffix)

	
sequence module

	Deleted table
		feature_organism
	feature
		added foreign key organism_id (not null)
		added uniquename column (not null)
		added unique key (organism_id,uniquename)
		made type_id not null
	featureloc
		added unique key (feature_id,locgroup,rank)
	feature_dbxref
		changed unique key to (feature_id,dbxref_id)
			- was (feature_dbxref_id, dbxref_id)  OK???
	feature_relationship
		changed type_id int attribute to not null
	synonym
		added 'type_id' to the unique key (synonym,type_id)

genetic module

NOTE:  We don't have unique keys on genotype, phenotype, and interaction.
       Since we're going to be having a schema review on this module soon,
       I decided not to worry about these for the time being.

	feature_genotype
		added unique key (feature_id,genotype_id)
	feature_phenotype
		added unique key (feature_id,phenotype_id)
	phenotype_cvterm
		added unique key (phenotype_id,cvterm_id,prank)
	interaction_subj
		added unique key (feature_id,interaction_id)
	interaction_obj
		added unique key (feature_id,interaction_id)

companalysis module

	analysis
		added unique key (program,programversion)
	analysisfeature
		changed unique key to (feature_id,analysis_id)
			was (feature_id)	

expression module

	expression
		doesn't have a unique key!  But what would it be?
	feature_expression
		added unique key (expression_id,feature_id)
	expression_cvterm
		added unique key (expression_id,cvterm_id)
	expression_pub
		added unique key (expression_id,pub_id)
	eimage
		doesn't have a unique key! What would it be?
	expression_image
		added unique key (expression_id,eimage_id)

map module

	I've skipped this one except for ditching the auditing attributes
	and dbxrefstr stuff... still needs lots of work!   Maybe we could
	do a mini-review on this module sometime soon?  I've got some
	examples of how I use a rejigged featurepos table to manage the
	fragmented a.gambiae genome, but I'd bet what I did can be 
	improved upon.

VERSION 0.04
============

	GENERAL CHANGES
	---------------

	added Makefile

	*prop tables have been made uniform: pkey_id has been changed to 
	type_id.  all fk references to the cvterm table should now either be
	type_id or cvterm_id.  pval field has been changed to value, and prank
	has been changed to rank.  no pranks here!

	all subject/predicate/object using tables previously used
	subjterm_id/reltype_id/objterm_id.  this has been changed to
	subject_id/type_id/object_id to be more generally applicable and consistent
	with other uses of cvterm references.


	MODULE CHANGES
	--------------

	audit module
		no changes

	bin
		added of scripts to autogenerate graphviz and "diagram"
		ER diagrams from schema.

		added script to autogenerate Class::DBI middleware layer.
		this introduces an SQL::Translator dependency

	companalysis
		no changes

	cv
		cv.cvname is now cv.name.  cv.cvdefinition is now cv.definition.
		cvterm.termdefinition is now cvterm.definition.
		tables cvrelationship and cvpath have been renamed as cvtermrelationship
		and cvtermpath, and the appropariate field and index names have changed.

	expression
		no changes

	general
		contact table has been added.  data should start moving over from
		pub.author soon, and the contact table should be fleshed out by 
		one of the pub projects (ie pubsearch)

		db table pk is now a serial int, rather than a varchar.  dbxref
		now references db.db_id as dbxref.db_id instead of dbxref.dbname

		dbxrefprop and dbxrefrelationship are commented out pending review

	genetic
		no changes

	map
		no changes

	organism
		organism.abbrev changed to organism.abbreviation

	pub
		introduced a fk from author table to contact table in general module


	sequence
		no changes

	www
		added for gmod-web.  this is likely to have many of the link
		tables removed in favor of using the general-purpose "contact"
		table in general module, and using a new tag-value based approach
		to storing user bookmarks/lists/preferences/etc

VERSION 0.04
============

	MODULE CHANGES
	--------------

	audit module
		no changes

	bin
		no changes

	companalysis
		table analysisinvocation removed as redundant with current
		usage of analysis.

		table analysisinvocationprop changed back to analysisprop.

	cv
		renamed table cvtermrelationship to cvterm_relationship

	expression
		no changes

	general
		tables tableinfo and project moved to metadata.sql.

		tables dbxrefprop and dbxrefrelationship removed for now
		since they caused problems with the build.

	genetic
		interaction.backgroundgenotype_id changed to 
		interaction.background_genotype_id.

	map
		no changes

	organism
		no changes

	pub
		deleted the fk from author table to contact table in the
		general module, as this relation is effectively 
		unimplementable for the vast majority of author records.

	sequence
		feature_relationship keys subjfeature_id, objfeature_id,
		and relrank changed to subject_id, object_id, and rank,
		respectively, for consistency with the rest of the schema.

	www
		no change

2005-02-08      - [cjm] db.contact_id nullable
                -       cvterm.dbxref_id NOT NULL
                -       added comments to cv table

2005-03-10      - [cjm] feature_cvterm_dbxref added

2005-04-20      - [cjm] changed comment style and added new comments
                        cv and sequence modules only

2005-06-07      - [cjm] added: feature_cvterm.is_not and feature_cvterm_dbxref

2006-04-11      - [cjm] split genetic module into genetic+phenotype modules
