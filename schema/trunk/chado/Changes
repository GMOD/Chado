VERSION 0.01
============

No change log

VERSION 0.02
============

No change log

VERSION 0.03
============

all modules
	ditched timeentered and timelastmod columns in every table
		We've decided that auditing is implementation specific.
		We're presently working on the FB implementation, and
		  will make that available soon
	changed all dbxrefstr foreign keys to dbxref_id
	added indexes for every foreign key column in every table
	all linking tables:
		Added primary keys to all linking tables, for consistency's 
		sake, since we already had primary keys in some linking tables.
		I hope nobody objects...?

general module:

	dbxref
		removed dbxref.dbxrefstr
		removed unique key (dbxrefstr)

cv module:

	New table:
		added table cv to hold cv names
	cvterm
		changed accordingly
	cvpath
		changed accordingly	

	cvterm_synonym
		changed the name of table cvterm_synonym to cvtermsynonym, 
		since this isn't a linking table.


organism module:

	organism_dbxref
		added unique key (organism_id,dbxref_id)
	organism
		made genus, species, taxgroup fields not null

pub module

	pub
		added miniref
		added unique key (miniref)
	pub_author
		added unique key (author_id,pub_id)
	author
		added unique key (surname,givenname,suffix)

	
sequence module

	Deleted table
		feature_organism
	feature
		added foreign key organism_id (not null)
		added uniquename column (not null)
		added unique key (organism_id,uniquename)
		made type_id not null
	featureloc
		added unique key (feature_id,locgroup,rank)
	feature_dbxref
		changed unique key to (feature_id,dbxref_id)
			- was (feature_dbxref_id, dbxref_id)  OK???
	feature_relationship
		changed type_id int attribute to not null
	synonym
		added 'type_id' to the unique key (synonym,type_id)

genetic module

NOTE:  We don't have unique keys on genotype, phenotype, and interaction.
       Since we're going to be having a schema review on this module soon,
       I decided not to worry about these for the time being.

	feature_genotype
		added unique key (feature_id,genotype_id)
	feature_phenotype
		added unique key (feature_id,phenotype_id)
	phenotype_cvterm
		added unique key (phenotype_id,cvterm_id,prank)
	interaction_subj
		added unique key (feature_id,interaction_id)
	interaction_obj
		added unique key (feature_id,interaction_id)

companalysis module

	analysis
		added unique key (program,programversion)
	analysisfeature
		changed unique key to (feature_id,analysis_id)
			was (feature_id)	

expression module

	expression
		doesn't have a unique key!  But what would it be?
	feature_expression
		added unique key (expression_id,feature_id)
	expression_cvterm
		added unique key (expression_id,cvterm_id)
	expression_pub
		added unique key (expression_id,pub_id)
	eimage
		doesn't have a unique key! What would it be?
	expression_image
		added unique key (expression_id,eimage_id)

map module

	I've skipped this one except for ditching the auditing attributes
	and dbxrefstr stuff... still needs lots of work!   Maybe we could
	do a mini-review on this module sometime soon?  I've got some
	examples of how I use a rejigged featurepos table to manage the
	fragmented a.gambiae genome, but I'd bet what I did can be 
	improved upon.

VERSION 0.04
============

	GENERAL CHANGES
	---------------

	added Makefile

	*prop tables have been made uniform: pkey_id has been changed to 
	type_id.  all fk references to the cvterm table should now either be
	type_id or cvterm_id.  pval field has been changed to value, and prank
	has been changed to rank.  no pranks here!

	all subject/predicate/object using tables previously used
	subjterm_id/reltype_id/objterm_id.  this has been changed to
	subject_id/type_id/object_id to be more generally applicable and consistent
	with other uses of cvterm references.


	MODULE CHANGES
	--------------

	audit module
		no changes

	bin
		added of scripts to autogenerate graphviz and "diagram"
		ER diagrams from schema.

		added script to autogenerate Class::DBI middleware layer.
		this introduces an SQL::Translator dependency

	companalysis
		no changes

	cv
		cv.cvname is now cv.name.  cv.cvdefinition is now cv.definition.
		cvterm.termdefinition is now cvterm.definition.
		tables cvrelationship and cvpath have been renamed as cvtermrelationship
		and cvtermpath, and the appropariate field and index names have changed.

	expression
		no changes

	general
		contact table has been added.  data should start moving over from
		pub.author soon, and the contact table should be fleshed out by 
		one of the pub projects (ie pubsearch)

		db table pk is now a serial int, rather than a varchar.  dbxref
		now references db.db_id as dbxref.db_id instead of dbxref.dbname

		dbxrefprop and dbxrefrelationship are commented out pending review

	genetic
		no changes

	map
		no changes

	organism
		organism.abbrev changed to organism.abbreviation

	pub
		introduced a fk from author table to contact table in general module


	sequence
		no changes

	www
		added for gmod-web.  this is likely to have many of the link
		tables removed in favor of using the general-purpose "contact"
		table in general module, and using a new tag-value based approach
		to storing user bookmarks/lists/preferences/etc

VERSION 0.04
============

	MODULE CHANGES
	--------------

	audit module
		no changes

	bin
		no changes

	companalysis
		table analysisinvocation removed as redundant with current
		usage of analysis.

		table analysisinvocationprop changed back to analysisprop.

	cv
		renamed table cvtermrelationship to cvterm_relationship

	expression
		no changes

	general
		tables tableinfo and project moved to metadata.sql.

		tables dbxrefprop and dbxrefrelationship removed for now
		since they caused problems with the build.

	genetic
		interaction.backgroundgenotype_id changed to 
		interaction.background_genotype_id.

	map
		no changes

	organism
		no changes

	pub
		deleted the fk from author table to contact table in the
		general module, as this relation is effectively 
		unimplementable for the vast majority of author records.

	sequence
		feature_relationship keys subjfeature_id, objfeature_id,
		and relrank changed to subject_id, object_id, and rank,
		respectively, for consistency with the rest of the schema.

	www
		no change

