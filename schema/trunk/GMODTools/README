SYNOPSIS
      GMODTools is a collection of perl scripts for use with GMOD Chado
      databases, primarily at this point for loading and extracting
      miscellaneous sequences.

      Bio::GMOD::Bulkfiles package created from FlyBase file dumper (August 2004)
  
      Other sequence functions are in library module
      GMOD::Chado::SeqUtils -- common methods for these chado seq scripts
      with main programs in bin/ folder as summarized below.
  
      ======================================================================  
  
NAME
      bulkfiles.pl -- command-line program for Bio::GMOD::Bulkfiles
  
SYNOPSIS
      This program generates bulk genome annotation files from a Chado genome
      database, including Fasta, GFF, DNA, Blast indices.
  
      # get bulkfiles software
      curl -O http://eugenes.org/gmod/GMODTools/GMODTools-1.0.zip
      unzip GMODTools*zip
      -- OR --
      cvs -d :pserver:anonymous@cvs.sourceforge.net:/cvsroot/gmod \
        co -d GMODTools schema/GMODTools 

      # load a genome chado db to Postgres database
      curl -O http://sgdlite.princeton.edu/download/sgdlite/sgdlite.sql.gz
      createdb sgdlite
      (gunzip -c sgdlite.sql.gz | psql -d sgdlite -f - ) >& log.load 

      # extract bulk files from database
      cd GMODTools 
      perl -Ilib bin/bulkfiles.pl -conf sgdbulk -make 

      ======================================================================  

NAME
      Bio::GMOD::Bulkfiles -- produce bulk sequence and feature files
        from Chado genome database for public distribution.

ABOUT Bulkfiles
      This generates Fasta, GFF, DNA and other bulk genome annotation files at
        ftp://flybase.net/genomes/Drosophila_melanogaster/current/ ..
        (and other species)
      It works with several FlyBase chado dbs, and with SGDLite chado db

      Bulkfiles is mostly self-contained, but uses a few
      BioPerl parts plus XML::Simple for configuration files.  All of
      the organism/database-specific logic should be in these configuration
      files (see GMODTools/conf/bulkfiles/)
        fbbulk-r4.xml, sgdbulk1.xml .. -- organism/database/release specific options
        chadofeatsql.xml  --  chado db sql calls to dump features
        chadofeatconv.xml --  feature conversion options

OUTPUTS
      DNA files (full chromosomes) in raw and fasta formats
      GFF (v3) feature files
      FFF (v1) feature files (used in FlyBase, each complex feature one line
         using GenBank/EMBL locations)
      Fasta sequence for each selected feature set,
         with headers from feature files
      BLAST Index files (NCBI)

USAGE
      use Bio::GMOD::Bulkfiles;    
  
      my $bulkfiles= Bio::GMOD::Bulkfiles->new( 
        configfile => 'fbbulk-r4',   # data-release config file, required param
        debug => 1, showconfig => 0,
        failonerror => 1,
        );
  
      $bulkfiles->dumpFeatures(); # extract feature tables from chado sql db
      $bulkfiles->sortNSplitByChromosome(); # collate and separate by chromosome
      $bulkfiles->dumpChromosomeBases();    # extract chromosome dna files
  
         # produce various output format bulk files from above
      my $result= $bulkfiles->makeFiles(
            formats => [qw(fff gff fasta blast gnomap)], 
            chromosomes => [qw(all)] );
  
WHY Bulkfiles?
      (rather than using other middleware layers to chado db - chadoxml,
       chadodbi, bioperl, ...)
   
      The general logic is
  
        1. dump all chado db features using simple (and quick) sql,
           to common intermediate table files, and chromosome dna to raw files.
           The feature info is simple: type, location, name/id, and a few
           attributes (db_xrefs,..)
       
        2. postprocess these table files to create the various public use
           formats (the time-consuming and configurable part), organized
           into per-chromosome files.
    
      Here are some reasons we take this approach:
  
        a. using simple sql to dump all db features to intermediate table
           allows easy checks that all features get to bulk files
       
        b. simple sql dump is fast (30 - 60 min for full fly genome), 
           reliable in getting all mapped features by keeping logic simple
       
        c. process table output in stages - better debugging of steps in
            process, and can split processing among computers
           c1. the stages are loosely coupled - one can go back, tweek
            configurations and get a new output w/o redoing the complete
            extraction process.
        
        d. convert one common feature table + dna to several output formats
           in one step, or repeatedly as needed.
    
        e. combine features from several chado dbs (flybase now has 3 chado dbs
           for d.mel genome features), and add other sources like
           flybase cytology features.
       
        f. need fairly complex and data specific configurations - moving
          that to config files keeps code reusable.
      
        g. each genome chado database has different policy and choices with
          respect to feature, vocabulary and other data.  A highly configurable
          tool, with data extraction and correction methods that are separate
          and tunable is needed to adapt to such variation in genome databases.
      
     ==========================================================================  

ABOUT GMOD::SeqUtils
      GMOD::SeqUtils is based on GMOD release 0.001 (January 2004) and can
      be expected to change or go obsolete.  Besides contents of
      this package, requirements to run include the perl modules
      installed with GMOD release, esp. Chado::LoadDBI/AutoDBI and
      its ancestor classes from CPAN - Class::DBI, Ima::DBI, etc.
  
      Chado::SeqUtils was written for use with the nascent Daphnia genome database,
      wFleaBase, at http://eugenes.org/daphnia/ See also further information
      at http://eugenes.org/daphnia/database
    
      ======================================================================  

NAME
    gmod_init_db.pl

SYNOPSIS
      *** from GMOD 0.001; needs updating to be useful
      A simple script to create the Chado database and tables

NAME
    gmod_load_newseq.pl

SYNOPSIS
    *** from GMOD 0.001; needs updating to be useful

    Load a file of miscellany sequences: cDNA, EST, microsats into chado db,
    generating public IDs. Sequences are assumed to be non-genomic, not
    located.

      ======================================================================  

NAME
    gmod_dump_seq.pl - Print sequences from ChadoDB

SYNOPSIS
      *** from GMOD 0.001; needs updating to be useful

    Dump sequence file of Chado features, with feature props, synonyms,
    dbxrefs xSelect by organism, by 'pub' = input file, seq type, feat props
    Need for nascent daphnia wFleaBase to use sequence public IDs

      ======================================================================  

NAME
      gmod_list_db.pl

SYNOPSIS
      *** from GMOD 0.001; needs updating to be useful

    Summarize feature entries in a Chado database, by publication (input
    file), by Seq. Ontology type (cDNA, EST, etc.), by organism. Add other
    categories as needed.

AUTHORS
      Don Gilbert, Feb 2004
