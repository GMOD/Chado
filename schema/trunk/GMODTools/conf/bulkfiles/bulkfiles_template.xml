<opt
  name="bulkfiles"
  relid="1"
  date="20060102"
  make_current="0"
  >
  
  <about id="bulkfiles_template"><![CDATA[
    This is an example main configuration file for GMODTools bulkfiles
    generator.  The concept is that each database release uses
    specific database, release ids, dates, names, but a common
    set of other configurations.
 
    This file has the main settings, and includes other settings.
    Create a new one for each data release, and customize.
    
    Main tags:
    relid = required, to match <release id=xxx> setting with release details.
    date, name = optional information.
    make_current = 1
      will make $datadir/$species/'current' symlink to this release folder.
  ]]></about>

  <about id="xml_configurations"><![CDATA[
    The structure of these configurations is as per Perl module
    XML::Simple configurations. These include
    SIMPLE values: key="value"
    ARRAY values are repeated 
      <key>value1</key>
      <key>value2</key>
    HASH values have an id or name tag, are repeated and include any substructure:
      <key id="1" tag1="bob>
        <array>one</array><array>two</array>
      </key>
      <key id="2" tag1="jill">
        <array>ten</array><array>twenty</array>
      </key>
      
    There are many of these configurations.  Documentation of them
    is included, sparely as yet, in the configuration files (about tags).
    
    for full listing, run 
      bulkfiles.pl -config=bulkfiles_template -showconfig -debug 
  ]]></about>
  
  
  <include>site_defaults</include>
  
  <about id="include">
    Using 'include' options in the xml configurations will
    add these file settings to main configuration, but not replace main
    settings.  Includes can be nested.
    
    'site_defaults' is one which is handy for including all the
    common settings your site uses for data releases.
  </about>
  

  <title>Chado DB Data Release</title>
  
  <doc id="Release.txt"><![CDATA[
  Bulk output for Chado genome databases
  Database: ${title}
  Species:  ${species}
  Release:  ${rel}, dated ${date} as ${relfull}
  
  See release notes at <a href="${release_url}"> ${release_url}</a>
  ]]></doc>
  
  <about id="doc">
    doc tags are generally printed to files
    id= name, file name unless path given
    path= path to output file.
    A few common tags can be used as inserted ${variables}
  </about>
  
  <release id="1" 
    rel="rel1"  
    dbname="chado_spp_2" 
    date="20040519"
    relfull="myspecies_release1"
    release_url="/genome/${species}/myspecies_release1.html"
    />
  <release id="2" rel="rel2"  dbname="chado_spp_1" date="20051020"
    relfull="myspecies_release2"
    release_url="/genome/${species}/myspecies_release2.html"
    />
  <about id="release"><![CDATA[
    release tags (an ARRAY) will specify release info:
      id= number matching 'relid' above
      rel= release tag appended to output files
      date= release date
      relful= full release name, used as folder name
      dbname=chado database name; replaces site default db name= tag 
      release_url = url to some document on release info
  ]]></about>
  

  <!-- see organisms.xml; add your species there -->
  <org>scer</org>
  <species>Saccharomyces_cerevisiae</species>
  <!-- see chadofeatsql ENV_default -->
  <golden_path>'chromosome'</golden_path>
  <featureprops>'Note','orf_classification'</featureprops>
  <seq_ontology>Sequence Ontology Feature Annotation</seq_ontology>
  
  <about id="species-genome">
    These values of org, species,golden_path,featureprops are some
    common species-genome specific options.
    org = short species id.
    golden_path = what highest level of genome feature is (a SO term), 
    chromosome, chromosome_arm, golden_path are some common ones.
    featureprops = chado featureprops to include with feature dump.
  </about>


  <featdump
    path="tmp/featdump/\w+.tsv"
    config="chadofeatsql"
    tag="feature_sql"
    type="feature_table"
    splitname="chadofeat"
    >
    <target>chromosomes</target>
    <target>features</target>
    <target>matches</target> 
    <target>analysis</target>  
  </featdump>

  <about id="featdump">
    This specifies the primary chado database feature dump, including
    which table sections in the chadofeatsql.xml configuration
    to use.  Each target here matches a chado feature SQL entry in chadofeatsql.
    
    This should become a 'fileset' instead of 'featdump'.
  </about>

  <fileset_override
    name="fff"
    path="fff/.+\.fff"
    input="feature_table"
    title="Genome features"
    config="sgdfeatconf"
    handler="FeatureWriter"
    dogzip="0"
    />
  <fileset_override id="dummy" title="placeholder for xmlsimple"/>

  <about id="fileset_override">
    fileset hash table defines what bulk files to produce, and how.
    fileset.xml has default settings, this fileset_override replaces
    just one of these. The  name="fff" is a conversion of chado 
    feature dump to a 'gff-like' table, using database-specific
    feature conversions, so it typically needs attention for a new 
    site/database.
  </about>

  
</opt>
